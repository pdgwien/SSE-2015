Schwachstelle: Cross-Site Request Forgery (CSRF)

In der dynamischen Website welche mit PHP(Version 5+) sowie HTML erstellt wurde 
ist ein CSRF Exploit eingebaut.
Cross Site Request Forgery ist eine indirekte Angriffstechnik bei der die URL des Opfer 
verändert wird um bestimmte Aktionen auslösen.
Diese Aktionen können das "harmlose" beenden einer Sitzung sein oder das verändern des Passworts, 
bis hin zum manipulieren des Systems des Opfers sein.
Bei dieser Website handelt es sich um ein Online-Banking System bei welchen man auf 
sein Konto Geld einzahlen kann. Diese Einzahlung wird dann auf das Konto mit der Kontonummer des
Users gebucht. Die Kontonummer ist als hidden Textfield auf der Seite gespeichert und wird mittels 
GET an das PHP-Skriptzur Einzahlung gesendet.

Die Fehler die zu dem Exploit führen befinden sich in den skript "account.php".
In dem Skript ist bei Zeile 33 die Eingabe mittels GET gelöst.
33: <form action="payment.php" method="GET">
Dadurch werden alle Eingaben in der URL gesendet was der Hacker ausnutzen kann und dadurch seine
Banknummer eingeben kann.
Auch kann das Hidden Field einfach in Firefox mittels "Element Untersuchen" gefunden und umgeändert werden.
Bei der Eingabe der neuen Banknummer wird dann die Einzahlung in das Konto des Hackers gebucht.
Der Hacker musst dazu nur einen eingeloggten Kunden der Bank einen Link schicken der genau den beschriebenen
Exploit ausführt.
zB: https://localhost/insecure/payment.php?payment=100&bankAccountNr=6666
Die zweite Möglichkeit währe die Benutzereingabe des Kunden zu stehlen.
Aus diesem Grund wir, im Gegensatz zur Unsicheren Version der Website, das Passwort des Kunden zusätzlich gehashed.

Schwachstelle ausführen:
Als erstes muss die HTML Seite login.html aufgerufen werden.
Auf der Login Seite kann man sich dann mit dem Benutzernamen: admin und den Passwort: admin einloggen.
(Für das Hackerkonto kann man sich mit den Benutzernamen: hacker und Passwort: hacker einloggen)
Wenn man sich eingeloggt hat kann man auf der Account Seite den Betrag zum einzahlen angeben.
Hier kann man etweder mit Firefox und Rechtsklick "Element Untersuchen" das Hidden Field auf 6666 umändern.
Oder man gibt einen Betrag an klickt auf einzahlen und ändert auf der erscheinenden Seite die URL von bankAccountNr=5000
auf bankAccountNr=6666.
Dadurch wird das Geld auf den Account des Hackers übertragen und von den derzeitigen angemeldeten User abgezogen.
Um sich nun den Kontostand des Hackers anzuschauen kann man entweder auf dessen Account wechseln oder man öffnet
das user_bankaccount.txt File. Hier sieht man USERNAME|KONTONUMMER|KONTOSTAND aufgelistet.

Das Sichere Programm unterscheidet sich in zwei Bereichen.
In dem Skript "account.php" ist bei Zeile 33 die Eingabe mittels POST gelöst.
Dadurch wird die Eingabe nicht in der URL sichtbar und der mögliche Angreifer erhält keine zusätzlich
Information und zugriffsmöglichkeit.
Weiters wurde das hidden-Field entfernt wodurch es nicht mehr manipulierbar ist. Um trotzdem die Banknummer
zu finden wurde das PHP Skript payment.php verändert und ein user_banknumber.txt File erstellt in dem die Banknummer
zum jeweiligen User gespeichert ist (Der User wird über die Session gefunden).
In payment.php in Zeile 94 wurde die Funktion "getBankAccountNr" erzeugt welche aus den user_banknumber.txt File 
die Kontonummer ausliest. Dadurch kann der Hacker die Nummer nicht mehr manipulieren (außer er hat Zugriff auf den Server).

Kürzliche CSRF Schwachstellen:

Schwachstelle vom 27.05.2015
Bei der "Synologys Web-Fotoalbum Photo Station" einer Software für die DiskStation NAS-Geräte konnte 
durch einen Exploit beliebiger Code auf dem eigenen NAS ausgeführt werden.
Nachdem die Opfer auf eine präparierte Webseite gelockt wurden konnten die Angreifer mittels manipulierten POST-Requests 
beliebigen Code auf den gerät ausführen.
Der Exploit über CSRF war möglich da die Software die Parameter aus dem Request ungeprüft über den exec()-Befehl von PHP ausführte.
Da diese Schwachstelle schon länger vorhanden war konnten die Angreifer auf alle in den NAS Gerät gespeicherte Daten zugreifen.

http://www.heise.de/security/meldung/Jetzt-patchen-Synology-NAS-ueber-Fotoalbum-angreifbar-2668853.html

Schwachstelle vom 27.02.2015 
Ein Service-Provider und seine Kunden in Brasilien wurden Opfer einer Typischen CSFR Attacke.
Die Nutzer wurden gezielt mit Phishing-Spam bombadiert in denen manipulierten Links getarnt als 
authentisch Mails des Providers vorhanden waren.
Ein Klick auf die URL löste die CSRF Attacke aus die und standardmäßigen Logindaten des eigenen Routers wurden 
in dessen Interface eingegeben. Dadurch bekamen die Angreifer Kontrolle über den Router. 

http://www.heise.de/security/meldung/l-f-Mal-wieder-DNS-Angriffe-auf-Router-2561028.html